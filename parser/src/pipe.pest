pipe = _{ SOI ~ sessions* ~ EOI }
WHITESPACE = _{ " " | "\t"  }
COMMENT =  _{ inline_comment | block_comment }

inline_comment = _{ ("#" | "//") ~ (!eo_inline_comment ~ ANY)* }
block_comment = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
eo_inline_comment = _{ NEWLINE | EOI }

comment_block = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
comment_line = _{ "//" ~ ANY*  }

// Session
sessions = { (session_generic_config | session_pipeline | NEWLINE )+ }

session_generic_config = { ident ~ session_generic_config_content }
session_pipeline = { ident ~ session_pipeline_content }

session_generic_config_content = { "{" ~ (NEWLINE | common_content)* ~ "}" }
session_pipeline_content = { "{" ~ (NEWLINE | module)* ~ "}" }

//Modules
module = { ident ~ ident? ~ module_content }
module_content = { "{" ~ (NEWLINE | common_content | attach)* ~ "}" }

//Attatch
attach= { "attach" ~ (module | ident | reference) }
reference = @{ "@" ~ ident }
//Macro
param_macro = { ident ~ value*? ~ param_macro_content }
param_macro_content = { "(" ~ common_content* ~ ")" }

common_content = { (NEWLINE | param | param_macro )+ }

// Param
param = { ident ~ "=" ~ value }

// Ident
char = { ASCII_ALPHANUMERIC | "." | "_" | "/" }
ident = @{ char+ }

// Value
value = _{ object | array | string | number | boolean | null | interpolation | string_interpolation | embedded }

//interpolation
interpolation = { "${" ~ interpolation_content  ~ "}" }
interpolation_content = @{ (!"}" ~ ANY)* }
string_interpolation = { "`" ~!"``"~ string_interpolation_content ~ "`" }
string_interpolation_content = @{ (!"`" ~ ANY)* }

//embedded
embedded = { "```"  ~ (embedded_source)? ~ embedded_content ~ "```" }
embedded_source = @{ char+ }
embedded_content = @{ (!"```" ~ ANY)* }

// Var types
string = { "\"" ~ string_content ~ "\"" }
string_content = @{ (!"\"" ~ ANY)* }
boolean = { "true" | "false" }
null = { "null" }
number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
array = {
    "[" ~ "]" |
    "[" ~  NEWLINE? ~ value ~ ( NEWLINE? ~ "," ~  NEWLINE? ~ value)* ~  NEWLINE? ~ "]"
}
object = {
    "{" ~ "}" |
    "{" ~ pair ~ ("," ~ pair)* ~ "}"
}
pair = { NEWLINE? ~ string ~ ":" ~ value ~ NEWLINE? }
