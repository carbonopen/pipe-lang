pipe = _{ SOI ~ sessions* ~ EOI }
WHITESPACE = _{ " " | "\t" | "\r" | "\r\n" | "\n"  }
COMMENT = _{ (comment_block | comment_line | comment_line2) }

comment_block = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
comment_line = _{ "//" ~ (!"//" ~ ANY)*  }
comment_line2 = _{ "#" ~ (!"#" ~ ANY)*  }
// // Module
// block = { module ~ attributes }

// Session
sessions = _{ (session_config | session_import | session_vars | session_pipeline) }

session_import = { identity ~ session_import_content }
session_config = { identity ~ session_config_content }
session_vars = { identity ~ session_vars_content }
session_pipeline = { identity ~ session_pipeline_content }

session_import_content = { "{" ~ (param | param_macro)* ~ "}" }
session_config_content = { "{" ~ (param | param_macro)* ~ "}" }
session_vars_content = { "{" ~ (param | param_macro)* ~ "}" }
session_pipeline_content = { "{" ~ (module)* ~ "}" }


//Modules
module = { identity ~ identity? ~ module_content }
module_content = { "{" ~ (param | param_macro | attach)* ~ "}" }

//Attatch
attach= { "attach" ~ (module | identity) }


//Macro
param_macro = { identity ~ (types)*? ~ param_macro_content }
param_macro_content = { "(" ~ (param)* ~ ")" }

// Param
param = { identity ~ "=" ~ param_value }
param_value = _{ object | array | string | number | boolean | null | interpolation  }

// Ident
identity = @{ identity_first_char ~ identity_char* }
identity_char = _{ letter | digit | "-" | "." | "_" }
identity_first_char = _{ letter | "_" }
letter = _{ 'a'..'z' | 'A'..'Z' }
digit = _{ '0'..'9' }
// name = _{ string }

// Types
types = _{ object | array | string | number | boolean | null | interpolation   }

//interpolation
interpolation = { "${" ~ interpolation_content  ~ "}" }
interpolation_content = @{ (!"}" ~ ANY)* }

// Var types
string = @{ "\"" ~ string_content ~ "\"" }
string_content = @{ (!"\"" ~ ANY)* }
boolean = { "true" | "false" }
null = { "null" }
number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
array = {
    "[" ~ "]" |
    "[" ~ types ~ ("," ~ types)* ~ "]"
}
object = {
    "{" ~ "}" |
    "{" ~ pair ~ ("," ~ pair)* ~ "}"
}
pair = { string ~ ":" ~ types }

