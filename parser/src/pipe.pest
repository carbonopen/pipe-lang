pipe = _{ SOI ~ sessions* ~ EOI }
WHITESPACE = _{ " " | "\t"  }
COMMENT =  _{ inline_comment | block_comment }

inline_comment = _{ ("#" | "//") ~ (!eo_inline_comment ~ ANY)* }
block_comment = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
eo_inline_comment = _{ NEWLINE | EOI }

comment_block = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
comment_line = _{ "//" ~ ANY*  }

// Session
sessions = { (session_generic_config | session_pipeline | NEWLINE )+ }

session_generic_config = { ident ~ session_generic_config_content }
session_pipeline = { ident ~ session_pipeline_content }

session_generic_config_content = { "{" ~ (NEWLINE | common_content)* ~ "}" }
session_pipeline_content = { "{" ~ (NEWLINE | module)* ~ "}" }

//Modules
module = { ident ~ ident? ~ module_content ~ (tag)*? }
module_content = { "{" ~ (NEWLINE | common_content | attach)* ~ "}" }

tag = { ":" ~ ident ~ tag_args? }
tag_args = {"(" ~ ( number | boolean | null | string| string_alt | ident | array | object | ",")* ~ ")"}

//Attatch
attach= { ("|" | "pipe") ~ (module | ident | reference) }
reference = @{ "@" ~ ident }
//Macro
param_macro = { ident ~ value*? ~ param_macro_content }
param_macro_content = { "(" ~ common_content* ~ ")" }

common_content = { (NEWLINE | param | param_macro| attach )+ }

// Param
// param = { ident ~ "=" ~ value }

param_type = !{ UPPERCASE_LETTER ~ ident? }

param = _{ param_typed_with_value | param_default | param_typed  }
param_typed_with_value = { ident ~ ":" ~ param_type ~ "=" ~ value }
param_default = { ident ~ "=" ~ value }
param_typed = { ident ~ ":" ~ param_type }

// Ident
char = { ASCII_ALPHANUMERIC | "_" }
ident = @{ char+ }

// Value
value = _{ object | array | string | string_alt | number | boolean | null | interpolation | string_interpolation | object_interpolation  }
value_withou_interpolation = _{ object | array | string | string_alt | number | boolean | null  }

//interpolation
interpolation = { "${" ~ (ident)? ~ interpolation_content  ~ "}" }
interpolation_content = @{ (!"}" ~ ANY)* }
string_interpolation = { "`" ~ !"``" ~ string_interpolation_content ~ "`" }
string_interpolation_content = @{ (!"`" ~ ANY)* }
object_interpolation = {
    "{" ~ object_interpolation_pair ~ ("," ~ object_interpolation_pair)* ~ "}"
}
object_interpolation_pair = _{ object_interpolation_pair_default | object_interpolation_pair_merge }
object_interpolation_pair_merge = { NEWLINE? ~  "..." ~ interpolation  ~ NEWLINE? }
object_interpolation_pair_key = _{ string | interpolation | string_interpolation }
object_interpolation_pair_default = { NEWLINE? ~ object_interpolation_pair_key ~ ":" ~ value ~ NEWLINE? }

// Var types
string = { "\"" ~ string_content ~ "\"" }
string_alt = { "\'" ~ string_content_alt ~ "\'" }
string_content_alt = @{ (!"\'" ~ ANY)* }
string_content = @{ (!"\"" ~ ANY)* }
boolean = { "true" | "false" }
null = { "null" }
number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
array = {
    "[" ~ "]" |
    "[" ~  NEWLINE? ~ value ~ ( NEWLINE? ~ "," ~  NEWLINE? ~ value)* ~  NEWLINE? ~ "]"
}
object = {
    "{" ~ "}" |
    "{" ~ object_pair ~ ("," ~ object_pair)* ~ "}"
}
object_pair = { NEWLINE? ~ string ~ ":" ~ value_withou_interpolation ~ NEWLINE? }
